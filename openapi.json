{
  "openapi": "3.0.3",
  "info": {
    "title": "Binar Academy - OpenAPI 3.0",
    "description": "",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://petstore3.swagger.io/api/v3"
    }
  ],
  "tags": [
    {
      "name": "car",
      "description": "Everything about Car",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/cars": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "Get list of data cars",
        "description": "Get data Car",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "uuid",
                      "format": "int64",
                      "example": "asd313d22"
                    },
                    "image": {
                      "type": "string",
                      "example": "image01"
                    },
                    "capacity": {
                      "type": "integer",
                      "example": 4
                    },
                    "rentperday": {
                      "type": "integer",
                      "example": 40000
                    },
                    "description": {
                      "type": "string",
                      "example": "comfortable"
                    },
                    "availableAt": {
                      "type": "date",
                      "example": "1-12-2002"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Car not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "car"
        ],
        "summary": "Add a new data car",
        "description": "Add a new data car",
        "requestBody": {
          "description": "Create a new data car",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "asd313d22"
                  },
                  "image": {
                    "type": "string",
                    "example": "image01"
                  },
                  "capacity": {
                    "type": "integer",
                    "example": 4
                  },
                  "rentperday": {
                    "type": "integer",
                    "example": 40000
                  },
                  "description": {
                    "type": "string",
                    "example": "comfortable"
                  },
                  "availableAt": {
                    "type": "string",
                    "format": "date",
                    "example": "2002-12-01"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Car"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/cars/{id}": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "Get car details by ID",
        "description": "Retrieve details of a specific car by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the car to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "image": {
                      "type": "string"
                    },
                    "capacity": {
                      "type": "integer"
                    },
                    "rentperday": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "availableAt": {
                      "type": "string"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "image": {
                      "type": "string"
                    },
                    "capacity": {
                      "type": "integer"
                    },
                    "rentperday": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "availableAt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Car not found"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "car"
        ],
        "summary": "Delete a car by ID",
        "description": "Delete a specific car by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the car to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deleted"
          },
          "404": {
            "description": "Car not found"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "car"
        ],
        "summary": "Update a car by ID",
        "description": "Update specific car details by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the car to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated car data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "capacity": {
                    "type": "integer"
                  },
                  "rentperday": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "availableAt": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update"
          },
          "404": {
            "description": "Car not found"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    
    "/register": {
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "description": "Endpoint to create a new user",
        "requestBody": {
          "description": "User data to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  },
                  "username": {
                    "type": "string",
                    "example": "john_doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "secret_password"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  },
                  "username": {
                    "type": "string",
                    "example": "john_doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "secret_password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "username": {
                      "type": "string",
                      "example": "john_doe"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "john.doe@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "secret_password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    
    "/admin/register": {
      "post": {
        "tags": ["user"],
        "summary": "Register an admin",
        "description": "Creates a new admin user with the given input",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Successful operation"
          }
        }
      }
    },
    
    "/login": {
      "post": {
        "tags": ["user"],
        "summary": "User Login",
        "description": "Logs in a user with email and password",
        "operationId": "loginUser",
        "requestBody": {
          "description": "User login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithToken"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "FAIL"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    
  },
  "components": {
    "schemas": {
      "UserWithToken": {
        "type": "object",
        "properties": {
          "name": {
            "type" : "string"
          },
          "email": {
            "type": "string"
          },
          "encryptedPassword": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["SUPERADMIN", "ADMIN", "MEMBER"]
          },
          "token": {
            "type": "string",
            "description": "JWT token for authenticated user"
          }
        }
      },
      
     
     
     
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "encryptedPassword": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["SUPERADMIN", "ADMIN", "MEMBER"]
          }
        
        },
        "xml": {
          "name": "user"
        }
      },
      
      "Car": {
        "required": [],
        "type": "object",
        "properties": {
          "id": {
            "type": "uuid",
            "format": "int64",
            "example": "asd313d22"
          },
          "image": {
            "type": "string",
            "example": "image01"
          },
          "capacity": {
            "type": "integer",
            "example": 4
          },
          "rentperday": {
            "type": "integer",
            "example": 40000
          },
          "description": {
            "type": "string",
            "example": "comfortable"
          },
          "availableAt": {
            "type": "date",
            "description": "1-12-2002"
          }
        },
        "xml": {
          "name": "pet"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "requestBodies": {
      "Pet": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}